{"version":3,"sources":["api/index.js","redux/books/books.js","redux/configureStore.js","components/navigation/Header.js","components/BookItem.js","components/AddBook.js","pages/Books.js","pages/Categories.js","App.js","index.js"],"names":["END_POINT","API","postBook","book","a","axios","post","item_id","title","category","response","getBooks","get","deleteBook","id","delete","ADD_BOOK","REMOVE_BOOK","GET_BOOKS","initialState","reducer","state","action","type","payload","filter","combineReducers","books","bookReducer","store","createStore","compose","applyMiddleware","thunk","logger","devTools","links","path","text","Header","className","map","link","to","BookItem","removeBookFromStoreProps","onClick","AddBook","addBookToStoreProps","useState","uuid","formInputs","setFormInputs","onChange","e","target","name","value","placeholder","required","preventDefault","newBook","Books","dispatch","useDispatch","useSelector","getBooksFromStore","then","data","Object","entries","key","booksArray","useEffect","removeBookFromStore","Categories","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.386198a1.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst END_POINT = 'https://us-central1-bookstore-api-e63c8.cloudfunctions.net/bookstoreApi/apps/j7LPM1fwDsVO8gxJB89O/books';\n\nconst API = {\n  postBook: async (book) => {\n    const response = await axios.post(END_POINT, {\n      item_id: book.item_id,\n      title: book.title,\n      category: book.category,\n    });\n    return response;\n  },\n  getBooks: async () => {\n    const response = await axios.get(END_POINT);\n    return response;\n  },\n  deleteBook: async (id) => {\n    const response = await axios.delete(`${END_POINT}/${id}`);\n    return response;\n  },\n};\n\nexport default API;\n","import API from '../../api';\n\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\nconst GET_BOOKS = 'bookStore/books/GET_BOOKS';\n\nconst initialState = [];\n\nexport const addBook = (payload) => (dispatch) => {\n  API.postBook(payload).then(async (response) => {\n    if (response.data === 'Created') {\n      dispatch({\n        type: ADD_BOOK,\n        payload,\n      });\n    }\n  });\n};\n\nexport const removeBook = (payload) => (dispatch) => {\n  API.deleteBook(payload).then(async (response) => {\n    if (response.data === 'The book was deleted successfully!') {\n      dispatch({\n        type: REMOVE_BOOK,\n        payload,\n      });\n    }\n  });\n};\n\nexport const getBooks = () => (dispatch) => {\n  API.getBooks()\n    .then((response) => response.data)\n    .then((data) => {\n      const books = Object.entries(data).map(([key, value]) => {\n        const [booksArray] = value;\n        return {\n          item_id: key,\n          ...booksArray,\n        };\n      });\n\n      dispatch({\n        type: GET_BOOKS,\n        payload: books,\n      });\n    });\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n\n    case REMOVE_BOOK:\n      return state.filter((book) => book.item_id !== action.payload);\n\n    case GET_BOOKS:\n      return [...state, ...action.payload] || [...state, []];\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import {\n  createStore, combineReducers, applyMiddleware, compose,\n} from 'redux';\nimport { composeWithDevTools as devTools } from 'redux-devtools-extension';\nimport logger from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport bookReducer from './books/books';\n\nconst reducer = combineReducers({\n  books: bookReducer,\n});\n\nconst store = createStore(\n  reducer,\n  compose(applyMiddleware(thunk), applyMiddleware(logger), devTools()),\n);\n\nexport default store;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst links = [\n  {\n    id: 1,\n    path: '/',\n    text: 'Books',\n  },\n  {\n    id: 2,\n    path: '/categories',\n    text: 'Categories',\n  },\n];\n\nconst Header = () => (\n  <header>\n    <h4>Book Store</h4>\n    <nav>\n      <ul className=\"nav-ul\">\n        {links.map((link) => (\n          <li key={link.id}>\n            <Link className=\"nav-a\" to={link.path}>\n              {link.text}\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  </header>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst BookItem = ({ book, removeBookFromStoreProps }) => (\n  <li key={book.item_id}>\n    <p>\n      {book.title}\n      <span>\n        &nbsp;in&nbsp;\n        {book.category}\n        &nbsp;category\n      </span>\n    </p>\n    <button\n      type=\"button\"\n      onClick={() => {\n        removeBookFromStoreProps(book.item_id);\n      }}\n    >\n      Remove\n    </button>\n  </li>\n);\n\nBookItem.propTypes = {\n  book: PropTypes.shape({\n    item_id: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    category: PropTypes.string.isRequired,\n  }).isRequired,\n\n  removeBookFromStoreProps: PropTypes.func.isRequired,\n};\n\nexport default BookItem;\n","import React, { useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport PropTypes from 'prop-types';\n\nconst AddBook = ({ addBookToStoreProps }) => {\n  const [formInputs, setFormInputs] = useState({\n    id: uuid(),\n    title: '',\n    category: '',\n  });\n\n  const onChange = (e) => {\n    setFormInputs({\n      ...formInputs,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const addBook = (e) => {\n    e.preventDefault();\n    if (formInputs.title && formInputs.category) {\n      const newBook = {\n        item_id: uuid(),\n        title: formInputs.title,\n        category: formInputs.category,\n      };\n      addBookToStoreProps(newBook);\n    }\n  };\n\n  return (\n    <form>\n      <input\n        type=\"text\"\n        name=\"title\"\n        placeholder=\"Book Title\"\n        onChange={onChange}\n        value={formInputs.title}\n        required\n      />\n      <input\n        type=\"text\"\n        name=\"category\"\n        placeholder=\"Book Author\"\n        onChange={onChange}\n        value={formInputs.category}\n        required\n      />\n      <button type=\"button\" onClick={addBook}>\n        Add New Book\n      </button>\n    </form>\n  );\n};\n\nAddBook.propTypes = {\n  addBookToStoreProps: PropTypes.func.isRequired,\n};\n\nexport default AddBook;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport BookItem from '../components/BookItem';\nimport AddBook from '../components/AddBook';\nimport { addBook, removeBook, getBooks } from '../redux/books/books';\n\nconst Books = () => {\n  const dispatch = useDispatch();\n  const { books } = useSelector((state) => ({ ...state }));\n  const getBooksFromStore = () => {\n    dispatch(getBooks());\n  };\n\n  useEffect(() => {\n    getBooksFromStore();\n  }, []);\n\n  const addBookToStore = (newBook) => {\n    dispatch(addBook(newBook));\n  };\n\n  const removeBookFromStore = (id) => {\n    dispatch(removeBook(id));\n  };\n\n  return (\n    <main>\n      <section>\n        {!!books && (\n          <ul>\n            {books.map((book) => (\n              <BookItem\n                key={book.item_id}\n                book={book}\n                removeBookFromStoreProps={removeBookFromStore}\n              />\n            ))}\n          </ul>\n        )}\n      </section>\n      <section>\n        <AddBook addBookToStoreProps={addBookToStore} />\n      </section>\n    </main>\n  );\n};\n\nexport default Books;\n","import React from 'react';\n\nconst Categories = () => (\n  <div>\n    <h3>Under Construction</h3>\n  </div>\n);\n\nexport default Categories;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from './components/navigation/Header';\nimport Books from './pages/Books';\nimport Categories from './pages/Categories';\n\nconst App = () => (\n  <Router>\n    <Header />\n    <Switch>\n      <Route exact path=\"/\" component={Books} />\n      <Route exact path=\"/categories\" component={Categories} />\n    </Switch>\n  </Router>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/app.scss';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}